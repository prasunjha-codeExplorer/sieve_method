
              // MERGE SORT //
import java.util.*;
class Main {
public static void merge(int[] arr,int start,int end,int mid){
        int[] ar = new int[start+end+1];
        int low = start;
        int high = mid+1;
        int k=start;
 while(low<=mid && high<=end){
    if(arr[low] < arr[high]){
     ar[k] = arr[low];
     low++;
     k++;
   }else{
     ar[k] = arr[high];
      high++;
      k++;
     }
      } 
 while(low<=mid){
   ar[k] = arr[low];
    low++; 
    k++;
     }
   while(high<=end){
      ar[k] = arr[high];
     high++;
      k++;
     }
    for(int i=start; i<=end; i++){
    arr[i] = ar[i];
   }

    }
 
   public static void mergeSort(int[] arr,int start,int end){
        if(start<end){
     int mid = start + (end-start)/2;    
     mergeSort(arr,start,mid);      
     mergeSort(arr,mid+1,end);
     merge(arr,start,end,mid);
   }
   
 }

 public static void main(String[] args) {
  int[] arr = {2,2,2,2,2,2,21,1,11,1,1,1,3,3};
  int n = arr.length;
  mergeSort(arr,0,n-1);
  System.out.println(Arrays.toString(arr));
   }
}
